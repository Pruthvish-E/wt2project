{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog/blog.component.ts","webpack:///src/app/blog/blog.component.html","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/carousel/carousel.component.ts","webpack:///src/app/carousel/carousel.component.html","webpack:///src/app/chat.service.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/chatcard/chatcard.component.ts","webpack:///src/app/chatcard/chatcard.component.html","webpack:///src/app/chatsend/chatsend.component.ts","webpack:///src/app/chatsend/chatsend.component.html","webpack:///src/app/chess-requests/chess-requests.component.ts","webpack:///src/app/chess-requests/chess-requests.component.html","webpack:///src/app/feed/feed.component.ts","webpack:///src/app/feed/feed.component.html","webpack:///src/app/feeds.service.ts","webpack:///src/app/fivestars/fivestars.component.ts","webpack:///src/app/fivestars/fivestars.component.html","webpack:///src/app/fourstars/fourstars.component.ts","webpack:///src/app/fourstars/fourstars.component.html","webpack:///src/app/friends/friends.component.ts","webpack:///src/app/friends/friends.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/onestars/onestars.component.ts","webpack:///src/app/onestars/onestars.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/requests/requests.component.ts","webpack:///src/app/requests/requests.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/services/authenticate.service.ts","webpack:///src/app/services/chess.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/services/requests.service.ts","webpack:///src/app/services/search.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/threestars/threestars.component.ts","webpack:///src/app/threestars/threestars.component.html","webpack:///src/app/twostars/twostars.component.ts","webpack:///src/app/twostars/twostars.component.html","webpack:///src/app/usersimilarity.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","SafePipe","sanitizer","url","bypassSecurityTrustResourceUrl","name","AppComponent","title","spaceshooterUrl","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","BlogComponent","feedsService","getFeeds","subscribe","feeds","feeds1","feedsOfAllItems","items","console","log","description","CardComponent","CarouselComponent","imagesUrl","currentIndex","speed","infinite","direction","directionToggle","autoplay","avatars","split","map","x","i","num","window","open","httpOptions","headers","ChatService","http","ChatsUrl","postChatUrl","get","timestamp","msg","post","providedIn","ChatComponent","chatService","usersimilarityService","chats","username","chatsimilar","chatobj","similarity","sortedchat","sort","a","b","Number","sortedchats","slice","Math","max","length","getChats","chats1","sortedchat1","replace","chatO","getUserSimilarity","push","response","toFixed","error","ChatcardComponent","isset","ChatsendComponent","chatsendService","Date","now","toLocaleString","PutChat","postmsg","ChessRequestsComponent","profileService","chessService","requests","friends","requestObjects","friendObjects","noRequests","noFriends","getRequests","getFriends","getRequestDetails","acceptRequest","sendRequest","getUserDetails","user","j","to","from","hasRequest","document","getElementById","classList","toggle","FeedComponent","FeedsService","FeedsUrl","FivestarsComponent","FourstarsComponent","FriendsComponent","hasFriends","getUserFriends","updateUserName","getProfileDetails","getProfile","innerHTML","img","undefined","src","AuthGuard","router","authenticateService","loggedIn","navigate","HeaderComponent","isLogged","CheckloggedIn","logout","HomeComponent","games","imgUrl","rating","desc","LoginComponent","loginUserData","loginUser","localStorage","setItem","token","navigateByUrl","OnestarsComponent","ProfileComponent","hasFacebook","hasTwitter","hasSummary","userProfile","profile","profilePic","getUserProfilePage","facebook","twitter","summary","setAttribute","firstname","lastname","click","contentEditable","files","updateImage","new_summary","sendSummary","link","value","updateFacebook","updateTwitter","allButtons","getElementsByClassName","style","display","showButtons","hideButtons","openfileDialog","editProfile","updateSummary","RegisterComponent","registerUserData","registerUser","file","addFile","RequestsComponent","requestsService","hasRequests","getFriendRequests","index","addFriend","rejectFriend","SearchComponent","searchService","activatedRoute","notFriend","params","routeParams","searchUser","actualUser","visibility","updateProfileDetails","sendFriendRequest","friend","getUsername","AuthenticateService","_registerUrl","_loginUrl","getItem","fd","FormData","append","password","email","removeItem","ChessService","_acceptRequestUrl","_sendRequestUrl","_RequestUrl","_getRequestDetails","ProfileService","_userDetailsUrl","_profilePicUrl","_getFriendList","_getprofileUrl","_updateImageUrl","_updateSummaryUrl","_updateFacebookUrl","_updateTwitterUrl","responseType","RequestsService","_getFriendRequests","_addFriendUrl","_rejectFriendUrl","SearchService","_sendFriendRequestUrl","TokenInterceptorService","injector","next","tokenizedReq","clone","setHeaders","Authorization","getToken","handle","ThreestarsComponent","TwostarsComponent","UsersimilarityService","similarityUrl","environment","production","apiUrl","isLoggedIn","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {AuthGuard} from './guards/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport {RequestsComponent} from './requests/requests.component';\nimport {BlogComponent} from './blog/blog.component';\nimport {FriendsComponent} from './friends/friends.component';\nimport {SearchComponent} from './search/search.component';\nimport {ChessRequestsComponent} from './chess-requests/chess-requests.component'\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'requests', component: RequestsComponent,canActivate: [AuthGuard]},\n  {path: 'blog', component: BlogComponent},\n  {path: 'friends', component: FriendsComponent,canActivate: [AuthGuard]},\n  {path: 'search/:username', component: SearchComponent,canActivate: [AuthGuard]},\n  {path: 'chat', component: ChatComponent,canActivate: [AuthGuard]},\n  {path: 'chessRequests', component: ChessRequestsComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewEncapsulation, ViewChild, ElementRef, PipeTransform, Pipe, OnInit } from '@angular/core';\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-gaming';\n  spaceshooterUrl:string = \"assets/Space-Shooter/space_shooter.html\" \n}\n","<div>\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport 'hammerjs';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent, SafePipe } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HeaderComponent } from './header/header.component';\nimport {HomeComponent} from './home/home.component';\n\nimport {AuthGuard} from './guards/auth.guard';\nimport {TokenInterceptorService} from './services/token-interceptor.service';\nimport { RequestsComponent } from './requests/requests.component';\nimport {MatCardModule} from '@angular/material/card';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {CardComponent} from './card/card.component';\nimport { CarouselComponent } from './carousel/carousel.component';\nimport { ThreestarsComponent } from './threestars/threestars.component';\nimport { OnestarsComponent } from './onestars/onestars.component';\nimport { TwostarsComponent } from './twostars/twostars.component';\nimport { FourstarsComponent } from './fourstars/fourstars.component';\nimport { FivestarsComponent } from './fivestars/fivestars.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { SearchComponent } from './search/search.component';\nimport { ChessRequestsComponent } from './chess-requests/chess-requests.component';\n\nimport { NgxHmCarouselModule } from 'ngx-hm-carousel';\nimport { ChatComponent } from './chat/chat.component';\nimport { ChatcardComponent } from './chatcard/chatcard.component';\nimport { ChatsendComponent } from './chatsend/chatsend.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HeaderComponent,\n    HomeComponent,\n    SafePipe,\n    RequestsComponent,\n    CardComponent,\n    CarouselComponent,\n    ThreestarsComponent,\n    OnestarsComponent,\n    TwostarsComponent,\n    FourstarsComponent,\n    FivestarsComponent,\n    BlogComponent,\n    FeedComponent,\n    FriendsComponent,\n    SearchComponent,\n    ChessRequestsComponent,\n    ChatComponent,\n    ChatcardComponent,\n    ChatsendComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    NgxHmCarouselModule\n  ],\n  providers: [AuthGuard, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FeedItem,Feed} from '../models/feedcards';\nimport { FeedsService } from '../feeds.service';\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n\n feeds1: Feed;\n feedsOfAllItems: FeedItem[];\n\n  constructor(private feedsService: FeedsService) {}\nz\n  ngOnInit(): void {\n    this.feedsService.getFeeds().subscribe(feeds => {\n      this.feeds1 = feeds;\n      this.feedsOfAllItems = this.feeds1.items;\n      console.log(this.feeds1.description);\n    });\n\n  }\n\n}\n","\n<div class=\"mini-header\">\n    <div class=\"mini-div\">\n        <span class=\"mini-text\">Blog Spot</span>\n    </div>\n</div>\n<div class=\"bg-div\">\n<div class=\"container\">\n    <app-feed  *ngFor=\"let feed of feedsOfAllItems\"\n    [feed]=\"feed\"></app-feed>\n</div>\n</div>\n","import { Component, OnInit ,Input, ViewChild } from '@angular/core';\nimport {MatCardModule} from '@angular/material/card';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Game } from '../models/gamecard';\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css','./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n\n  @Input() games: Game;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<!-- <mat-card class=\"example-card\">\n\n\n    <b><mat-card-title>{{games.name}}</mat-card-title>\n    <mat-card-subtitle> rating :  {{games.rating}}</mat-card-subtitle></b>\n\n  <img mat-card-image src={{games.imgUrl}}>\n\n\n      {{games.desc}}\n\n  <mat-card-actions>\n    <button mat-button><a href={{games.src}}>Play</a></button>\n\n  </mat-card-actions>\n</mat-card> -->\n\n<div class=\"boxed container\">\n  <div style=\"text-align: center;\">\n  <h1 style=\"color: aliceblue;\">{{games.name}}</h1>\n  <app-onestars *ngIf=\"games.rating === 1\"></app-onestars>\n  <app-twostars *ngIf=\"games.rating === 2\"></app-twostars>\n  <app-threestars *ngIf=\"games.rating === 3\"></app-threestars>\n  <app-fourstars *ngIf=\"games.rating === 4\"></app-fourstars>\n  <app-fivestars *ngIf=\"games.rating === 5\"></app-fivestars>\n  </div>\n  <br><br>\n  <button class=\"btn-3 draw-border-3\"><img src = {{games.imgUrl}} width=\"350px\" height=\"300px\"></button>\n  <div class=\"topright\" style=\"color: antiquewhite;\"><button class=\"btn-2 draw-border-2\">{{games.desc}}</button></div>\n  <br><br>\n  <div class=\"bottomright\" ><a href={{games.src}} style=\"text-decoration:none\"><button class=\"btn draw-border\">Play Now</button></a></div>\n<br><br><br><br><br><br>\n</div>\n","// import { Component, OnInit } from '@angular/core';\n\n// @Component({\n//   selector: 'app-carousel',\n//   templateUrl: './carousel.component.html',\n//   styleUrls: ['./carousel.component.css']\n// })\n// export class CarouselComponent implements OnInit {\n\n//   constructor() { }\n\n//   ngOnInit(): void {\n//   }\n\n// }\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent {\n  imagesUrl = '../../assets/gamesimages/';\n  currentIndex = 0;\n  speed = 5000;\n  infinite = true;\n  direction = 'right';\n  directionToggle = true;\n  autoplay = true;\n  avatars = '123456781234567'.split('').map((x, i) => {\n    const num = i;\n    // const num = Math.floor(Math.random() * 1000);\n    return {\n      url: this.imagesUrl+`${num}`+'.jpg',\n      title: `${num}`\n    };\n  });\n\n  constructor() { }\n\n  click(i) {\n    if(i%3==1)\n    window.open('http://localhost:4200/chessRequests');\n    else if(i%3 == 0)\n    window.open('http://localhost:4200/../assets/Space-Shooter/space_shooter.html');\n    else\n    window.open('http://localhost:4200/../assets/Breakout_game/index.html');\n  }\n\n}\n","<ngx-hm-carousel\n  [(ngModel)]=\"currentIndex\"\n  [show-num]=\"2\"\n  [autoplay-speed]=\"speed\"\n  [infinite]=\"infinite\"\n  [drag-many]=\"true\"\n  [aniTime]=\"200\"\n  [data]=\"avatars\"\n  class=\"carousel c-accent\">\n\n  <section ngx-hm-carousel-container class=\"content\">\n    <article class=\"item cursor-pointer\"\n      ngx-hm-carousel-item\n      *ngFor=\"let avatar of avatars; let i = index\"\n        [ngClass]=\"{'visible': currentIndex===i}\">\n      <div class=\"img\" (click)=\"click(i)\"\n        [style.backgroundImage]=\"'url('+avatar.url+')'\">\n        {{i}}\n      </div>\n    </article>\n    <ng-template #infiniteContainer></ng-template>\n  </section>\n\n  <!-- only using in infinite mode or autoplay mode, that will render with-->\n  <ng-template #carouselContent let-avatar let-i=\"index\">\n    <article class=\"item cursor-pointer\"\n      [ngClass]=\"{'visible': currentIndex===i}\">\n      <div class=\"img\" (click)=\"click(i)\"\n        [style.backgroundImage]=\"'url('+avatar.url+')'\">\n        {{i}}\n      </div>\n    </article>\n  </ng-template>\n\n  <ng-template #carouselPrev>\n    <div class=\"click-area\">\n      <i class=\"material-icons\">keyboard_arrow_left</i>\n    </div>\n  </ng-template>\n  <ng-template #carouselNext>\n    <div class=\"click-area\">\n      <i class=\"material-icons\">keyboard_arrow_right</i>\n    </div>\n  </ng-template>\n\n  <ng-template #carouselDot let-model>\n    <div class=\"ball bg-accent\"\n      [class.visible]=\"model.index === model.currentIndex\"></div>\n  </ng-template>\n\n  <ng-template #carouselProgress let-progress>\n    <div class=\"progress\"></div>\n  </ng-template>\n\n</ngx-hm-carousel>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Chat } from './models/chatcard';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n\n\n  ChatsUrl: string = 'http://localhost:4000/chat/msg';\n  postChatUrl: string = 'http://localhost:4000/chat/addmsg';\n  constructor(private http: HttpClient) { }\n\n  // Get Chats\n  getChats(): Observable<Chat[]> {\n    return this.http.get<Chat[]>(this.ChatsUrl);\n  }\n\n  PutChat(timestamp , msg) {\n    return this.http.post<any>(this.postChatUrl,{ 'timestamp' : timestamp , 'msg': msg })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Chat , ChatSimilarity} from '../models/chatcard';\nimport { ChatService } from '../chat.service';\nimport { UsersimilarityService } from '../usersimilarity.service';\nimport { interval } from 'rxjs';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  similarity:number;\n  chats: Chat[] = [\n\n    {\n        username: 'tester1',\n        timestamp: '0',\n        msg: 'this is a msg 1'\n    },\n    {\n      username: 'tester2',\n      timestamp: '10',\n      msg: 'this is a msg 2'\n  },\n  {\n    username: 'tester3',\n    timestamp: '2',\n    msg: 'this is a msg 3'\n},\n{\n  username: 'tester4',\n  timestamp: '1',\n  msg: 'this is a msg 4'\n},\n{\n  username: 'tester5',\n  timestamp: '20',\n  msg: 'this is a msg 5'\n}\n\n  ];\n\n  chatsimilar: ChatSimilarity[] = [] ;\n  chatobj: ChatSimilarity = {username:\"1\",timestamp:\"1\",msg:\"hello\",similarity:0};\n\n  sortedchat1: any;\n  sortedchats1: any;\n\n  sortedchat: any = this.chats.sort((a,b) => Number(a.timestamp) - Number(b.timestamp));\n  sortedchats = this.sortedchat.slice(Math.max(this.sortedchat.length - 4, 0));\n  chats1: any;\n\n  constructor(private chatService: ChatService,private usersimilarityService: UsersimilarityService) { }\n\n  ngOnInit(): void {\n    this.chatService.getChats().subscribe(chats => {\n      this.chats1 = chats;\n      this.sortedchat1 = this.chats1.sort((a,b) => Number(a.timestamp.replace(\",\",\"\")) - Number(b.timestamp.replace(\",\",\"\")));\n\n      for(let i = 0; i < this.sortedchat1.length; i++){\n        var chatO = {username:\"1\",timestamp:\"1\",msg:\"hello\",similarity:0}\n        chatO.username = this.sortedchat1[i].username;\n        chatO.msg = this.sortedchat1[i].msg;\n        chatO.timestamp = this.sortedchat1[i].timestamp;\n        this.getUserSimilarity(this.sortedchat1[i].username, chatO);\n        this.chatsimilar.push(chatO);\n      }\n    })\n    interval(5000).subscribe(\n    x => { \n      this.chatsimilar = []\n      this.chatService.getChats().subscribe(chats => {\n        this.chats1 = chats;\n        this.sortedchat1 = this.chats1.sort((a,b) =>  Number(a.timestamp.replace(\",\",\"\")) - Number(b.timestamp.replace(\",\",\"\")));\n        console.log(\"got messages\")\n\n        for(let i = 0; i < this.sortedchat1.length; i++){\n          var chatO = {username:\"1\",timestamp:\"1\",msg:\"hello\",similarity:0}\n          chatO.username = this.sortedchat1[i].username;\n          chatO.msg = this.sortedchat1[i].msg;\n          chatO.timestamp = this.sortedchat1[i].timestamp;\n          this.getUserSimilarity(this.sortedchat1[i].username, chatO);\n          this.chatsimilar.push(chatO);\n\n        }\n      })\n    });\n  }\n\n  getUserSimilarity(username,chatO) {\n    this.usersimilarityService.getUserSimilarity(username).subscribe(\n      response => {\n                    chatO.similarity = (response*100).toFixed(2)\n                  },\n      error => console.log(error)\n    )\n  }\n}\n","\n<body >\n<span style=\"font-size: 0px;\">Chat</span>\n<div class=\"scroll\">\n<app-chatcard *ngFor=\"let chat of chatsimilar\"\n[chat]=\"chat\" ></app-chatcard>\n</div>\n<app-chatsend></app-chatsend>\n<span id=\"dup\" style=\"font-weight: 0;\"></span>\n</body>\n","import { Component, OnInit,Input } from '@angular/core';\nimport {Chat, ChatSimilarity} from '../models/chatcard';\nimport { UsersimilarityService } from '../usersimilarity.service';\n@Component({\n  selector: 'app-chatcard',\n  templateUrl: './chatcard.component.html',\n  styleUrls: ['./chatcard.component.css']\n})\nexport class ChatcardComponent implements OnInit {\n\n  @Input() chat: ChatSimilarity;\n  isset: boolean = false;\n  similarity: number ;\n\n  //colourCode: number = Number(this.chat.timestamp);\n\nconstructor(private usersimilarityService: UsersimilarityService) { }\n\n  ngOnInit(): void {\n  }\n\n  colourcode(username: string): number\n  {\n    return username.length % 10 + 1;\n  }\n\n  getUserSimilarity(username) {\n    this.usersimilarityService.getUserSimilarity(username).subscribe(\n      response => {\n                    this.similarity = response;\n                    this.similarity  = Number((this.similarity*100).toFixed(2));\n                   // console.log(response);\n\n                  },\n      error => console.log(error)\n    )\n    console.log(this.similarity);\n    this.isset = true;\n    return Number((this.similarity*100).toFixed(2));\n\n  }\n\n\n\n}\n","\n\n    <div class=\"talk-bubble tri-right border round btm-left-in\" style=\"margin-left:600px;padding-right: 500px;\">\n      <div class=\"talktext\">\n        \n        <p>\n          <a [routerLink]=\"['/search',chat.username]\"><b style=\"font-size: larger;\">\n           <span *ngIf=\"colourcode(chat.username)===9\" style=\"color: red;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===1\" style=\"color:blue;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===2\" style=\"color:purple;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===3\" style=\"color:green;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===4\" style=\"color:magenta;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===5\" style=\"color:gold;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===6\" style=\"color:aqua;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===7\" style=\"color:brown;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===8\" style=\"color:orange;\">{{chat.username}}</span>\n           <span *ngIf=\"colourcode(chat.username)===10\" style=\"color:crimson;\">{{chat.username}}</span>\n          </b>\n          </a>\n\n          <span>\n            <button class=\"button button5\">{{chat.similarity}}%</button>\n          </span>\n\n          <!-- {{chat.timestamp}}\n          <br> --><span style=\"font-size: large;font-weight: 500;\">{{chat.msg}}</span>\n\n          <br></p>\n      </div>\n    </div>\n    <br>\n ","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-chatsend',\n  templateUrl: './chatsend.component.html',\n  styleUrls: ['./chatsend.component.css','./chatsend.component.scss']\n})\nexport class ChatsendComponent implements OnInit {\n\n  msg: string;\n  timestamp: string = '0';\n\n  constructor(private chatsendService: ChatService, private sanitizer: DomSanitizer ) { }\n\n  ngOnInit(): void {\n  }\n\n  postmsg() {\n    this.timestamp = Date.now().toLocaleString();\n    console.log(this.timestamp,this.msg);\n\n    this.chatsendService.PutChat(this.timestamp, this.msg).subscribe(\n      error => console.log(error)\n    )\n  }\n\n\n}\n","<div class=\"form__group field\" style=\"margin-left:400px ;margin-top: 80px;margin-bottom: 100px;padding-bottom: 1000px;\">\n  <form>\n\n  <input type=\"text\" class=\"form__field\" placeholder=\"Enter your message\" name=\"name\" id='name' required  [(ngModel)]=\"msg\"/>\n  <label id=\"msg_label\" for=\"name\" class=\"form__label\">Enter your message</label>\n\n  <div class=\"button-circle\" style=\"margin-left: 500px;\" (click)=\"postmsg()\">\n    <div class=\"gradient\"></div>\n    <div class=\"button\"><i class=\"fa fa-rocket fa-2x\" style=\"position: relative; top: 18px;\"></i></div>\n  </div>\n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProfileService} from '../services/profile.service'\nimport {ChessService} from '../services/chess.service'\nimport { interval } from 'rxjs';\nimport { VirtualTimeScheduler, of } from 'rxjs';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-chess-requests',\n  templateUrl: './chess-requests.component.html',\n  styleUrls: ['./chess-requests.component.css']\n})\nexport class ChessRequestsComponent implements OnInit {\n  requests = []\n  friends = []\n  requestObjects = []\n  friendObjects = []\n  username = ''\n  noRequests:boolean = true\n  noFriends:boolean = true\n\n  constructor(\n    private profileService:ProfileService,\n    private chessService:ChessService,\n    \n  ) { }\n\n  ngOnInit(): void {\n    this.getRequests()\n    this.getFriends()\n    interval(5000).subscribe(\n      x => {\n        this.requests = []\n        this.requestObjects = []\n        this.getRequests()\n      })\n    interval(10000).subscribe(\n      x => {\n        this.friendObjects = []\n        this.getFriends()\n      }\n    )\n  }\n\n  getRequests() {\n    this.chessService.getRequests().subscribe( \n      response => {\n        this.requests = response\n        if(response != null) {\n          this.noRequests = false\n          for(var i = 0;i < response.length;i++) {\n            this.chessService.getRequestDetails(response[i]).subscribe(\n              response => {\n                this.requestObjects.push(response)\n              }\n            )\n          }\n        }\n      }\n    )\n  }\n\n  acceptRequest(id) {\n    this.chessService.acceptRequest(id).subscribe(\n      response => console.log(response)\n    )\n  }\n\n  sendRequest(name) {\n    this.chessService.sendRequest(name).subscribe(\n      response => console.log(response)\n    )\n  }\n\n  getFriends() {\n    this.profileService.getUserDetails().subscribe(\n      user => {\n        this.username = user.username\n        this.profileService.getFriends(user.username).subscribe( \n          response => {\n              console.log(response)\n              if(response.length > 0) {\n                this.noFriends = false\n                for(var i = 0;i < response.length;i++) {\n                  this.friendObjects.push({'name': response[i], 'hasRequest': false})\n                  for(var j = 0;j < this.requestObjects.length;j++) {\n                    if(this.requestObjects[j].to == response[i] || this.requestObjects[j].from == response[i]) {\n                      this.friendObjects[i].hasRequest = true\n                    }\n                  }\n                }\n              }  \n          }\n        )\n      }\n    )\n  }\n\n  inviteShow() {\n    document.getElementById('inviteFriends').classList.toggle(\"show\")\n  }\n\n  requestShow() {\n    document.getElementById('requests').classList.toggle(\"show\")\n  }\n\n}\n","<div class=\"mini-header\">\n    <div class=\"mini-div\">\n        <span class=\"mini-text\">Chess Requests</span>\n    </div>\n</div>\n<div>\n    <div class=\"wrapper\">\n    <div class=\"left-div\">\n        <span class=\"div-header\">Invite Friends</span>\n        <div id=\"inviteFriends\">\n            <div class=\"card\" style=\"margin: 10px;padding:10px\" *ngFor=\"let friend of friendObjects;let i = index\">\n                <div style=\"font-weight:500\" class=\"card-title\" id=\"send_{{friend.name}}\">{{friend.name}}</div>\n                <button class=\"button\" *ngIf=\"friend.hasRequest == false\" (click)=\"sendRequest(friend.name)\">Send Request</button>\n                <p class=\"card-text\" style=\"font-size:15px;\" *ngIf=\"friend.hasRequest\"> Request Pending</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"right-div\">\n        <span class=\"div-header\">Requests</span>\n        <div *ngIf=\"noRequests\" id=\"requests\">\n            You have no requests\n        </div>\n        <div *ngIf=\"noRequests == false\" id=\"requests\">\n            <div class=\"card\" style=\"margin: 10px;padding:10px\" *ngFor=\"let request of requestObjects;let i = index\">\n                <div *ngIf=\"request.accepted\">\n                    <div style=\"font-weight:500\" class=\"card-title\" *ngIf=\"request.from == username\">\n                        {{request.to}} has accepted your request!<br>\n                        <a class=\"card-link\" href=\"../../assets/Chess/chess.html?code={{request.reqid}}&color=w\">Play now!</a>\n                    </div>\n                    <div style=\"font-weight:500\" class=\"card-title\" *ngIf=\"request.to == username\">\n                        You have accepted {{request.from}}'s request!<br>\n                        <a class=\"card-link\" href=\"../../assets/Chess/chess.html?code={{request.reqid}}&color=b\">Play now!</a>\n                    </div>                \n                </div>\n                <div *ngIf=\"request.accepted==false\">\n                    <div style=\"font-weight:500\" class=\"card-title\">This request is still pending</div>\n                    <div class=\"card-text\" *ngIf=\"request.from == username\">\n                       {{request.to}} is yet to accept your request\n                    </div>\n                    <div class=\"card-text\" *ngIf=\"request.to == username\">\n                        {{request.from}} is inviting you to play!\n                        <button class=\"button\" (click)=acceptRequest(request.reqid)>Accept Request</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Component, OnInit ,Input} from '@angular/core';\nimport {FeedItem,Feed} from '../models/feedcards';\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n\n  @Input() feed: FeedItem;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<!-- <mat-card class=\"example-card\">\n\n\n    <b><mat-card-title>{{games.name}}</mat-card-title>\n    <mat-card-subtitle> rating :  {{games.rating}}</mat-card-subtitle></b>\n\n  <img mat-card-image src={{games.imgUrl}}>\n\n\n      {{games.desc}}\n\n  <mat-card-actions>\n    <button mat-button><a href={{games.src}}>Play</a></button>\n\n  </mat-card-actions>\n</mat-card> -->\n\n<div class=\"boxed container\">\n  <div style=\"text-align: center;\">\n  <h1 style=\"color: aliceblue;\">{{feed.title}}</h1>\n  </div><div class = \"bottomright\">{{feed.pubDate}}</div>\n  <div class=\"topright\" style=\"color: antiquewhite;\" [innerHTML]=\"feed.description\"></div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Feed } from './models/feedcards';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedsService {\n  FeedsUrl: string = 'http://localhost:4000/api/feeds';\n  constructor(private http: HttpClient) { }\n\n  // Get Todos\n  getFeeds(): Observable<Feed> {\n    return this.http.get<Feed>('http://localhost:4000/api/feeds');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fivestars',\n  templateUrl: './fivestars.component.html',\n  styleUrls: ['./fivestars.component.css']\n})\nexport class FivestarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fourstars',\n  templateUrl: './fourstars.component.html',\n  styleUrls: ['./fourstars.component.css']\n})\nexport class FourstarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star\"></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProfileService} from '../services/profile.service';\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.css','./friends.component.scss']\n})\nexport class FriendsComponent implements OnInit {\n  friends:any[];\n  hasFriends:boolean  = false;\n  username:string\n  constructor(\n    private profileService:ProfileService\n  ) { }\n\n  updateUserName() {\n    this.profileService.getUserDetails().subscribe(\n      user => {\n        this.getUserFriends(user.username)\n      },\n      error => console.log(error)\n    )\n  }\n\n  ngOnInit(): void {\n    this.updateUserName()\n  }\n\n  getUserFriends(username) {\n    this.profileService.getFriends(username).subscribe(\n      response => {\n                    this.friends = response\n                    for(var i=0;i<this.friends.length;i++) {\n                      this.hasFriends = true\n                      this.getProfileDetails(this.friends[i])\n                    }\n                  },\n      error => console.log(error)\n    )\n  }\n\n  getProfileDetails(username) {\n    this.profileService.getProfile(username).subscribe(\n      response => {\n        document.getElementById(`${username}_name`).innerHTML = `${response.username}`\n        if(response.img == undefined) {\n          (<HTMLImageElement>document.getElementById(`${username}_img`)).src = \"../assets/me.jpg\"\n        }\n        else {\n          (<HTMLImageElement>document.getElementById(`${username}_img`)).src = `http://localhost:4000/images/logo/${response.img}`\n        }},\n        error => (<HTMLImageElement>document.getElementById(`${username}_img`)).src = \"../assets/me.jpg\"\n        )\n  }\n\n}\n","<div class=\"mini-header\">\n    <div class=\"mini-div\">\n        <span class=\"mini-text\">Friends</span>\n    </div>\n</div>\n    <div *ngIf=\"hasFriends==false\">\n        <h2><p>You currently have no friends</p></h2>\n    </div>\n    <div class = \"bg-div\" *ngIf=\"hasFriends\">\n        <div class=\"container\">\n        <div class=\"friendBox draw-border\" *ngFor=\"let friend of friends;let i = index;\" style=\"background-color: black;border-width: 0ch;margin: 40px;\">\n            <div>\n                <a [routerLink]=\"['/search',friend]\" style=\"text-decoration:none\">\n                <button class=\"btn\">\n                <a [routerLink]=\"['/search',friend]\"><img class=\"friendImg\" id=\"{{friend}}_img\"></a>\n                <a [routerLink]=\"['/search',friend]\"><span class=\"friendName\" id=\"{{friend}}_name\" style=\"color: red;\">{{friend}}</span></a>\n                </button></a> </div>\n        </div>\n        </div>\n    </div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport {AuthenticateService} from '../services/authenticate.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router:Router,\n    private authenticateService:AuthenticateService\n  ) {\n\n  }\n\n  canActivate(): boolean {\n    if( this.authenticateService.loggedIn() ) {\n      return true\n    }\n    else {\n      this.router.navigate((['/login']))\n      return false\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthenticateService} from '../services/authenticate.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLogged:boolean = true;\n  constructor(\n    private authenticateService:AuthenticateService,\n    private router:Router\n  ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.CheckloggedIn()\n  }\n\n  CheckloggedIn() {\n    this.isLogged = this.authenticateService.loggedIn()\n  }\n\n  logout() {\n    this.isLogged = this.authenticateService.logout()\n  }\n}\n","<div>\n  <ul>\n      <li *ngIf=\"isLogged==false\"><a routerLink=\"/login\">Login</a></li>\n      <li *ngIf=\"isLogged==false\"><a routerLink=\"/register\">Register</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/home\" (click)=\"logout()\">Logout</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/requests\">Requests</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/blog\">Blog</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/friends\">Friends</a></li>\n      <li *ngIf=\"isLogged\"><a [routerLink]=\"['/search','search']\">Search</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/profile\">Profile</a></li>\n      <li *ngIf=\"isLogged\"><a routerLink=\"/chat\">Chat</a></li>\n      <li><a routerLink=\"/home\">Home</a></li>\n  </ul>\n</div>\n\n","import { Component, OnInit, Input} from '@angular/core';\nimport { Game } from '../models/gamecard';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n\n  games: Game[] = [\n\n    {\n      id : 1 ,\n      name : 'Chess',\n      imgUrl :  '../../assets/chessstock.jpg' ,\n      rating :  4 ,\n      desc : 'Chess is one of the oldest strategy games in the world.Chess is an excellent board logic game that develops such skills as tactics, strategy and visual memory.',\n      src : 'http://localhost:4200/chessRequests'\n    },\n    {\n      id : 2 ,\n      name : 'SpaceShooter',\n      imgUrl :  '../../assets/space_bg.jpg' ,\n      rating :  4 ,\n      desc : 'Space Shooter game puts you at the forefront of a battle with space intruders. You will take control of the lone spaceship and protect galaxy from alien swarms.',\n      src : '../../assets/Space-Shooter/space_shooter.html'\n    },\n    {\n      id : 3 ,\n      name : 'Breakout',\n      imgUrl :  '../../assets/breakout_bg.png' ,\n      rating :  5 ,\n      desc : 'Step out and play the classic breakout game which blew up and has inspired countless clones since inception.',\n      src : '../../assets/Breakout_game/index.html'\n    }\n\n\n\n  ]   ;\n\n\n\n\n  constructor() {  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <iframe height = 1000 width = 1000 src=\"../../assets/Space-Shooter/space_shooter.html\"></iframe> -->\n<!-- <iframe height = 1000 width = 1000 src=\"../../assets/Chess/chess.html\"></iframe> -->\n\n\n<app-carousel></app-carousel>\n<div class=\"bg-div\">\n<div class=\"container\">\n  <app-card\n    *ngFor=\"let game of games\"\n    [games]=\"game\"\n    >\n  </app-card>\n</div>\n</div>\n<app-carousel></app-carousel>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticateService} from '../services/authenticate.service';\nimport { environment } from '../../environments/environment';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData:any = {\n      user: {}\n  }\n  constructor(\n    private authenticateService:AuthenticateService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser() {\n    this.authenticateService.loginUser(this.loginUserData).subscribe(\n      response => {\n        localStorage.setItem(\"token\",response.token)\n        this.router.navigateByUrl('/home')\n      }\n    )\n  }\n}\n","<!-- <h2>Login</h2>\n<form (ngSubmit)=\"loginUser()\">\n    <div>\n        <label>Username</label>\n        <input [(ngModel)]=\"loginUserData.user.username\" name=\"username\" type=\"text\">\n    </div>\n    <div>\n        <label>Password</label>\n        <input [(ngModel)]=\"loginUserData.user.password\" name=\"password\" type=\"password\">\n    </div>\n    <button>Login</button>\n</form> -->\n\n<!DOCTYPE html>\n<html lang=\"en\" >\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Login</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\">\n\n</head>\n<body>\n<!-- partial:index.partial.html -->\n<body class=\"align\">\n\n  <div class=\"grid\">\n\n    <form  (ngSubmit)=\"loginUser()\" class=\"form login\">\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#user\"></use></svg><span class=\"hidden\">Username</span></label>\n        <input id=\"login__username\" type=\"text\" name=\"username\" class=\"form__input\" placeholder=\"Username\" required  [(ngModel)]=\"loginUserData.user.username\">\n      </div>\n\n      <div class=\"form__field\">\n        <label for=\"login__password\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#lock\"></use></svg><span class=\"hidden\">Password</span></label>\n        <input id=\"login__password\" type=\"password\" name=\"password\" class=\"form__input\" placeholder=\"Password\" required  [(ngModel)]=\"loginUserData.user.password\">\n      </div>\n\n      <div class=\"form__field\">\n        <input type=\"submit\" value=\"Sign In\">\n      </div>\n\n    </form>\n\n    <p class=\"text--center\">Not a member? <a routerLink=\"/register\">Register now</a> <svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"assets/images/icons.svg#arrow-right\"></use></svg></p>\n\n  </div>\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icons\"><symbol id=\"arrow-right\" viewBox=\"0 0 1792 1792\"><path d=\"M1600 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293H245q-52 0-84.5-37.5T128 1024V896q0-53 32.5-90.5T245 768h704L656 474q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z\"/></symbol><symbol id=\"lock\" viewBox=\"0 0 1792 1792\"><path d=\"M640 768h512V576q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28H416q-40 0-68-28t-28-68V864q0-40 28-68t68-28h32V576q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"/></symbol><symbol id=\"user\" viewBox=\"0 0 1792 1792\"><path d=\"M1600 1405q0 120-73 189.5t-194 69.5H459q-121 0-194-69.5T192 1405q0-53 3.5-103.5t14-109T236 1084t43-97.5 62-81 85.5-53.5T538 832q9 0 42 21.5t74.5 48 108 48T896 971t133.5-21.5 108-48 74.5-48 42-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zm-320-893q0 159-112.5 271.5T896 896 624.5 783.5 512 512t112.5-271.5T896 128t271.5 112.5T1280 512z\"/></symbol></svg>\n\n</body>\n<!-- partial -->\n\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-onestars',\n  templateUrl: './onestars.component.html',\n  styleUrls: ['./onestars.component.css']\n})\nexport class OnestarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star \"></span>\n<span class=\"fa fa-star \"></span>\n<span class=\"fa fa-star\"></span>\n<span class=\"fa fa-star\"></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProfileService} from '../services/profile.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css','./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  hasFriends:boolean = false\n  hasFacebook:boolean = false\n  hasTwitter:boolean = false\n  hasSummary:boolean = false\n  userProfile:boolean = true\n  profile:any = {}\n  profilePic:any = {}\n  friends:any[]\n  requests:any = {}\n  index:any\n  username:any\n\n  constructor(\n    private profileService:ProfileService,\n    private sanitizer: DomSanitizer,\n    private router:Router\n  ) { }\n\n  ngOnInit():void {\n    this.getUserProfilePage();\n  }\n\n  getUserProfilePage() {\n    this.profileService.getUserDetails().subscribe(\n      user => {\n        this.profile = user\n        this.username = user.username\n        console.log(user)\n\n        if(this.profile.facebook != undefined) {\n          this.hasFacebook = true\n        }\n\n        if(this.profile.twitter != undefined) {\n          this.hasTwitter = true\n        }\n\n        if(this.profile.summary != undefined) {\n          document.getElementById(\"summary\").innerHTML = this.profile.summary\n        }\n\n        this.getUserFriends(user.username)\n\n        if(this.profile.img == undefined) {\n          document.getElementById('profile_pic').setAttribute('src',\"../assets/me.jpg\")\n        }\n        else {\n          document.getElementById('profile_pic').setAttribute('src',`http://localhost:4000/images/logo/${this.profile.img}`)\n        }\n      }\n    )\n  }\n\n  getUserFriends(username) {\n    this.profileService.getFriends(username).subscribe(\n      response => {\n                    this.friends = response\n                    console.log(response)\n                    for(var i=0;i<3 && i<this.friends.length;i++) {\n                      this.hasFriends = true\n                      this.getProfileDetails(this.friends[i])\n                    }\n                  },\n      error => console.log(error)\n    )\n  }\n\n  getProfileDetails(username) {\n    this.profileService.getProfile(username).subscribe(\n      response => {\n        document.getElementById(`name_${username}`).innerHTML = `${response.firstname} ${response.lastname}`\n        if(response.img == undefined) {\n          (<HTMLImageElement>document.getElementById(`img_${username}`)).src = \"../assets/me.jpg\"\n        }\n        else {\n          (<HTMLImageElement>document.getElementById(`img_${username}`)).src = `http://localhost:4000/images/logo/${response.img}`\n        }},\n        error => (<HTMLImageElement>document.getElementById(`img_${username}`)).src = \"../assets/me.jpg\"\n        )\n}\n\n  openfileDialog() {\n    document.getElementById(\"imageUpload\").click();\n  }\n\n  editProfile() {\n    document.getElementById('summary').contentEditable=\"true\";\n  }\n\n  updateImage(files) {\n    this.profileService.updateImage(files[0]).subscribe(\n      response => {\n        this.getUserProfilePage()\n      },\n      error => console.log(error)\n    )\n  };\n\n  updateSummary() {\n    var new_summary = document.getElementById(\"summary\").innerHTML;\n    this.profileService.sendSummary(new_summary).subscribe(\n      response => {\n        console.log(\"summary updated\")\n      }\n    )\n  }\n\n  updateFacebook() {\n    var link = (<HTMLInputElement>document.getElementById(\"fbLink\")).value\n    this.profileService.updateFacebook(link).subscribe(\n      response => {\n        this.hasFacebook = true\n        this.getUserProfilePage()\n      },\n      error => console.log(error)\n    )\n  }\n\n  updateTwitter() {\n    var link = (<HTMLInputElement>document.getElementById(\"twtrLink\")).value\n    this.profileService.updateTwitter(link).subscribe(\n      response => {\n        this.hasTwitter = true\n        this.getUserProfilePage()\n      },\n      error => console.log(error)\n    )\n  }\n\n  showButtons() {\n    let allButtons = document.getElementsByClassName(\"hidden\") as HTMLCollectionOf<HTMLElement>;\n    for(var i = 0; i < allButtons.length; i++) {\n      allButtons[i].style.display = \"inline-block\";\n    }\n  }\n\n  hideButtons() {\n    let allButtons = document.getElementsByClassName(\"hidden\") as HTMLCollectionOf<HTMLElement>;\n    for(var i = 0; i < allButtons.length; i++) {\n      allButtons[i].style.display = \"none\";\n    }\n  }\n\n  Search(name) {\n    this.router.navigate(['/search',name])\n  }\n}\n","<div class=\"body\">\n    <div class=\"center\">\n        <button (click)=showButtons() class=\"btn draw-border\">Edit Info</button>\n        <button (click)=hideButtons() class=\"btn draw-border\">Done</button>\n        <div class=\"avatar\">\n            <img id=\"profile_pic\" (click)=openfileDialog()>\n        </div>\n        <div class=\"content\">\n            <h1>{{profile.firstname}} {{profile.lastname}}</h1>\n            <p id=\"summary\" class=\"summary\" (click)=editProfile()>I love gaming.</p>\n            <button class=\"hidden btn draw-border\" id=\"edit_tag\" (click)=\"updateSummary()\">Update</button>\n        </div>\n        <div class=\"social\">\n            <div *ngIf=\"hasFacebook || hasTwitter\">You can find me at</div>\n            <a *ngIf=\"hasFacebook\" id=\"fb\" href={{profile.facebook}} target=\"_blank\"><i class=\"fab fa-facebook\"></i></a>\n            <a *ngIf=\"hasTwitter\" id=\"twtr\" href={{profile.twitter}} target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\n        </div>\n        <div class=\"hidden\">\n            <span><span style=\"font-size: large;margin: 1em;\">Facebook</span><input class=\"clean-slide\" type=\"text\" id=\"fbLink\" placeholder=\"Enter Facebook link \" /><label for=\"fbLink\">Facebook</label>\n            </span><button class=\"hidden btn draw-border\" id=\"fb_update\" (click)=\"updateFacebook()\">Update</button>\n            <br>\n            <span style=\"font-size: large;margin: 1em;\">Twitter</span><input type=\"text\" id=\"twtrLink\" class=\"clean-slide\" placeholder=\"Enter Twitter link \" /><label for=\"twtrLink\">Twitter</label>\n\n            <button class=\"hidden btn draw-border\" id=\"twtr_update\" (click)=\"updateTwitter()\">Update</button>\n            <br>\n       </div>\n        <br>\n        <div *ngIf=\"hasFriends\">\n         <span style=\"font-size: 20px;\"> {{profile.firstname}}'s Friends</span>\n            <div id=\"friends\">\n                <div class=\"row row-list\">\n                    <div class=\"col-sm\" *ngFor=\"let friend of friends | slice:0:3;\">\n                        <a [routerLink]=\"['/search',friend]\"><img id=\"img_{{friend}}\" class=\"friend_img\"><br></a>\n                        <a [routerLink]=\"['/search',friend]\" id=\"name_{{friend}}\" class=\"friend_link\"></a>\n                    </div>\n                </div>\n            </div>\n            <div style=\"font-size: 20px;\">\n                <a routerLink=\"/friends\">See all friends</a>\n            </div>\n        </div>\n        <div *ngIf=\"hasFriends == false\" style=\"font-size:25px;\">\n            You haven't made any friends yet\n        </div>\n    </div>\n</div>\n<input id=\"imageUpload\" type=\"file\" name=\"image\" accept=\"image/*\" (change)=\"updateImage($event.target.files)\">\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticateService} from '../services/authenticate.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData:any = {\n\n  }\n\n  constructor(\n    private authenticateService:AuthenticateService,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  registerUser() {\n    this.authenticateService.registerUser(this.registerUserData).subscribe(\n      user => console.log(user),\n      error => console.log(error)\n    )\n    this.router.navigate(['/login'])\n  }\n\n  addFile(files) {\n    this.registerUserData.file = files[0];\n  }\n\n\n}\n","<!-- <h2>Register</h2>\n<form (ngSubmit)=\"registerUser()\" enctype=\"multipart/form-data\">\n    <div>\n        <label>First Name</label>\n        <input [(ngModel)]=\"registerUserData.firstname\" name=\"firstname\" type=\"text\">\n    </div>\n    <div>\n        <label>Last Name</label>\n        <input [(ngModel)]=\"registerUserData.lastname\" name=\"lastname\" type=\"text\">\n    </div>\n    <div>\n        <label>Email</label>\n        <input [(ngModel)]=\"registerUserData.email\" name=\"email\" type=\"text\">\n    </div>\n    <div>\n        <label>Username</label>\n        <input [(ngModel)]=\"registerUserData.username\" name=\"username\" type=\"text\">\n    </div>\n    <div>\n        <label>Password</label>\n        <input [(ngModel)]=\"registerUserData.password\" name=\"password\" type=\"password\">\n    </div>\n    <div>\n        <label for=\"image\">Image</label>\n        <input id=\"image\" type=\"file\" name=\"image\" accept=\"image/*\" (change)=\"addFile($event.target.files)\">\n    </div>\n    <div>\n        <button type=\"submit\">Register</button>\n        <a routerLink=\"/login\">Cancel</a>\n    </div>\n</form> -->\n\n\n\n\n<!DOCTYPE html>\n<html lang=\"en\" >\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Register</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\">\n\n</head>\n<body>\n<body class=\"align\">\n\n  <div class=\"grid\">\n\n    <form  (ngSubmit)=\"registerUser()\" enctype=\"multipart/form-data\" class=\"form login\">\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#user\"></use></svg><span class=\"hidden\">Firstname</span></label>\n        <input id=\"login__username\" type=\"text\" [(ngModel)]=\"registerUserData.firstname\" name=\"firstname\" class=\"form__input\" placeholder=\"firstname\" required >\n      </div>\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#user\"></use></svg><span class=\"hidden\">Lastname</span></label>\n        <input  type=\"text\" [(ngModel)]=\"registerUserData.lastname\" name=\"lastname\" class=\"form__input\" placeholder=\"lastname\" required >\n      </div>\n\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#user\"></use></svg><span class=\"hidden\">Email</span></label>\n        <input  type=\"text\" [(ngModel)]=\"registerUserData.email\" name=\"email\" class=\"form__input\" placeholder=\"Email ID\" required >\n      </div>\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#user\"></use></svg><span class=\"hidden\">Username</span></label>\n        <input  type=\"text\" [(ngModel)]=\"registerUserData.username\" name=\"username\" class=\"form__input\" placeholder=\"username\" required >\n      </div>\n\n\n      <div class=\"form__field\">\n        <label for=\"login__password\"><svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#lock\"></use></svg><span class=\"hidden\">Password</span></label>\n        <input id=\"login__password\" [(ngModel)]=\"registerUserData.password\" name=\"password\" type=\"password\" class=\"form__input\" placeholder=\"Password\" required >\n      </div>\n\n      <div class=\"form__field\">\n        <label for=\"login__username\"><svg class=\"icon\"></svg><span class=\"\">Image</span></label>\n        <input id=\"image\" type=\"file\" name=\"image\" accept=\"image/*\" (change)=\"addFile($event.target.files)\" class=\"form__input\"  required >\n      </div>\n\n\n      <div class=\"form__field\">\n        <input type=\"submit\" value=\"Register\">\n      </div>\n\n    </form>\n\n    <p class=\"text--center\">Already a member? <a routerLink=\"/login\">Login</a> <svg class=\"icon\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"assets/images/icons.svg#arrow-right\"></use></svg></p>\n\n  </div>\n\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icons\"><symbol id=\"arrow-right\" viewBox=\"0 0 1792 1792\"><path d=\"M1600 960q0 54-37 91l-651 651q-39 37-91 37-51 0-90-37l-75-75q-38-38-38-91t38-91l293-293H245q-52 0-84.5-37.5T128 1024V896q0-53 32.5-90.5T245 768h704L656 474q-38-36-38-90t38-90l75-75q38-38 90-38 53 0 91 38l651 651q37 35 37 90z\"/></symbol><symbol id=\"lock\" viewBox=\"0 0 1792 1792\"><path d=\"M640 768h512V576q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28H416q-40 0-68-28t-28-68V864q0-40 28-68t68-28h32V576q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"/></symbol><symbol id=\"user\" viewBox=\"0 0 1792 1792\"><path d=\"M1600 1405q0 120-73 189.5t-194 69.5H459q-121 0-194-69.5T192 1405q0-53 3.5-103.5t14-109T236 1084t43-97.5 62-81 85.5-53.5T538 832q9 0 42 21.5t74.5 48 108 48T896 971t133.5-21.5 108-48 74.5-48 42-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zm-320-893q0 159-112.5 271.5T896 896 624.5 783.5 512 512t112.5-271.5T896 128t271.5 112.5T1280 512z\"/></symbol></svg>\n\n</body>\n\n\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport {RequestsService} from '../services/requests.service';\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.css','../profile/profile.component.scss']\n})\nexport class RequestsComponent implements OnInit {\n  hasRequests:boolean = false\n  requests:any[]\n  constructor(\n    private requestsService:RequestsService\n  ) { }\n\n  ngOnInit(): void {\n    this.getRequests()\n  }\n\n  getRequests() {\n    this.requestsService.getFriendRequests().subscribe(\n      response => {this.requests = response\n        console.log(response)\n        if(this.requests.length > 0) {\n          this.hasRequests = true\n        }\n        console.log(this.requests)\n      },\n      error => console.log(error)\n    )\n  }\n\n  addFriendRequest(index) {\n    document.getElementById(`request${index}`).style.display = 'none'\n    this.requestsService.addFriend(this.requests[index]).subscribe(\n      response => console.log(\"Friend Added\"),\n      error => console.log(error)\n    )\n  }\n\n  rejectFriendRequest(index) {\n    document.getElementById(`request${index}`).style.display = 'none'\n    this.requestsService.rejectFriend(this.requests[index]).subscribe(\n      response => console.log(\"Friend Removed\"),\n      error => console.log(error)\n    )\n  }\n}\n","<div>\n    <div class=\"mini-header\">\n        <div class=\"mini-div\">\n            <span class=\"mini-text\">Friend Requests</span>\n        </div>\n    </div>\n    <div class=\"container\" style=\"text-align:center;\">\n        <h2 *ngIf=\"hasRequests == false\" >You currently have no friend requests</h2>\n        <h2 *ngIf=\"hasRequests\">Friend Requests</h2>\n    </div>\n    <div *ngIf=\"hasRequests\">\n        <div *ngFor=\"let request of requests;let i = index;\">\n            <div class=\"requestBox\" id=\"request{{i}}\">\n                <span id=\"requestMessage\" style=\"margin-left: 10px;font-size: 20px;\">{{request}} wants to be friends with you.</span>\n                <div id=\"container\" >\n                    <button id=\"button{{i}}\" (click)=\"addFriendRequest(i)\" class=\"btn draw-border\" style=\"padding:4px;\">Accept</button>\n                    <button (click)=\"rejectFriendRequest(i)\" class=\"btn draw-border\" style=\"padding:4px;\">Reject</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SearchService} from '../services/search.service'\nimport {ProfileService} from '../services/profile.service'\nimport {Router,ActivatedRoute} from '@angular/router'\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css','./search.component.scss','../profile/profile.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  actualUser:string\n  username:string;\n  profile:any = {}\n  hasFriends:boolean = false\n  hasFacebook:boolean = false\n  hasTwitter:boolean = false\n  hasSummary:boolean = false\n  notFriend:boolean = true\n  friends:any = {}\n\n  constructor(\n    private searchService:SearchService,\n    private activatedRoute:ActivatedRoute,\n    private router:Router,\n    private profileService: ProfileService\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserProfilePage()\n    this.activatedRoute.params.subscribe(\n      routeParams => {\n        let name = routeParams.username\n        this.searchUser(name)\n      })\n  }\n\n  getUserProfilePage() {\n    this.profileService.getUserDetails().subscribe(\n      user => {\n        this.actualUser = user.username\n      }\n    )\n  }\n  getUsername() {\n    document.getElementById('profile_body').style.visibility = 'hidden';\n    this.username = (<HTMLInputElement>document.getElementById('username')).value\n    this.router.navigate(['search',this.username])\n  }\n\n  searchUser(name) {\n    this.updateProfileDetails(name)\n  }\n\n  updateProfileDetails(username) {\n    this.searchService.getProfile(username).subscribe(\n      user => {\n        document.getElementById('profile_body').style.visibility = 'visible';\n        this.profile = user\n        console.log(user.username)\n        this.getUserFriends(username)\n\n        if(this.profile.facebook != undefined) {\n          this.hasFacebook = true\n        }\n\n        if(this.profile.twitter != undefined) {\n          this.hasTwitter = true\n        }\n\n        if(this.profile.summary != undefined) {\n          document.getElementById(\"summary\").innerHTML = this.profile.summary\n        }\n\n        if(this.profile.img == undefined) {\n          document.getElementById('profile_pic').setAttribute('src',\"../assets/me.jpg\")\n        }\n        else {\n          document.getElementById('profile_pic').setAttribute('src',`http://localhost:4000/images/logo/${this.profile.img}`)\n        }\n      }\n    )\n  }\n\n  getUserFriends(username) {\n    this.searchService.getFriends(username).subscribe(\n      response => {\n                    this.friends = response\n                    this.hasFriends = true\n                    for(var i =0;i<3 && i<this.friends.length;i++) {\n                      console.log(this.actualUser)\n                      console.log(this.friends)\n                      if(this.friends[i] == this.actualUser) {\n                        this.notFriend = false\n                      }\n                      this.getProfileDetails(this.friends[i])\n                    }\n                  },\n      error => console.log(error)\n    )\n  }\n\n  getProfileDetails(username) {\n    this.searchService.getProfile(username).subscribe(\n      response => {\n        console.log(response)\n        document.getElementById(`name_${username}`).innerHTML = `${response.firstname} ${response.lastname}`\n        if(response.img == undefined) {\n          (<HTMLImageElement>document.getElementById(`img_${username}`)).src = \"../assets/me.jpg\"\n        }\n        else {\n          (<HTMLImageElement>document.getElementById(`img_${username}`)).src = `http://localhost:4000/images/logo/${response.img}`\n        }},\n        error => (<HTMLImageElement>document.getElementById(`img_${username}`)).src = \"../assets/me.jpg\"\n        )\n    }\n\n  sendFriendRequest(name) {\n    this.searchService.sendFriendRequest(name).subscribe(\n      response => {\n        console.log(\"request sent\")\n      },\n      error => console.log(error)\n    )\n  }\n\n  Search(friend) {\n    this.searchUser(friend)\n  }\n}\n","<!-- <div> -->\n<div>\n<div  class = \"bg-div\">\n    <div  class=\"search-box\">\n        <input style=\"background-color: black;\"type=\"text\" id=\"username\" (click)=\"getUsername()\" placeholder=\"Search\">\n        <i id=\"icon\" class=\"search\" (click)=\"getUsername()\"></i>\n      </div>\n    <div class=\"mini-div\">\n        <span class=\"mini-text\">Search</span>\n    </div>\n</div>\n<br>\n    <!-- <input id=\"username\">\n    <button (click)=\"getUsername()\">Search</button>\n</div> -->\n<div class=\"body1\" id=\"profile_body\">\n    <div class=\"center\">\n        <button *ngIf=\"notFriend\" (click)=\"sendFriendRequest(username)\" class=\"btn draw-border\">Add Friend</button>\n        <div class=\"avatar\">\n            <img id=\"profile_pic\">\n        </div>\n        <div class=\"content\">\n            <h1>{{profile.firstname}} {{profile.lastname}}</h1>\n            <p id=\"summary\" class=\"summary\">I love gaming.</p>\n        </div>\n        <div class=\"social\">\n            <div *ngIf=\"hasFacebook || hasTwitter\">You can find me at</div>\n            <a *ngIf=\"hasFacebook\" id=\"fb\" href={{profile.facebook}} target=\"_blank\"><i class=\"fab fa-facebook\"></i></a>\n            <a *ngIf=\"hasTwitter\" id=\"twtr\" href={{profile.twitter}} target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\n        </div>\n        <br>\n        <div *ngIf=\"hasFriends\" style=\"font-size: 20px;\">\n            {{profile.firstname}}'s Friends\n            <div id=\"friends\">\n                <div class=\"row row-list\">\n                    <div class=\"col-sm\" *ngFor=\"let friend of friends | slice:0:3;\">\n                        <a [routerLink]=\"['/search',friend]\"><img id=\"img_{{friend}}\" class=\"friend_img\"></a><br>\n                        <a [routerLink]=\"['/search',friend]\" id=\"name_{{friend}}\" class=\"friend_link\"></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"hasFriends == false\">\n            {{profile.firstname}} hasn't made any friends yet\n        </div>\n    </div>\n</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  private _registerUrl = \"http://localhost:4000/user/register\";\n  private _loginUrl = \"http://localhost:4000/user/login\";\n\n  constructor(private http:HttpClient) { }\n\n  loginUser(user) {\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token')\n  }\n\n  registerUser(user) {\n    var fd = new FormData();\n    console.log(user);\n    fd.append(\"username\", user.username);\n    fd.append(\"password\", user.password);\n    fd.append(\"firstname\", user.firstname);\n    fd.append(\"lastname\", user.lastname);\n    fd.append(\"file\", user.file);\n    fd.append(\"email\",user.email);\n    return this.http.post<any>(this._registerUrl, fd);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\")\n    return false;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChessService {\n\n  _acceptRequestUrl = \"http://localhost:4000/api/acceptrequest\";\n  _sendRequestUrl = \"http://localhost:4000/api/sendrequest\";\n  _RequestUrl =  \"http://localhost:4000/user/gamerequests\"\n  _getRequestDetails = \"http://localhost:4000/request/\"\n  \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  acceptRequest(id) {\n    console.log(\"id: \"+ id)\n    return this.http.post<any>(this._acceptRequestUrl, {\"reqid\": id})\n  }\n\n  sendRequest(username) {\n    return this.http.post<any>(this._sendRequestUrl, {\"username\": username})\n  }\n\n  getRequests() {\n    return this.http.get<any>(this._RequestUrl)\n  }\n\n  clearRequests() {\n    return this.http.delete<any>(this._RequestUrl)\n  }\n\n  getRequestDetails(id) {\n    return this.http.get<any>(`${this._getRequestDetails}${id}`)\n  } \n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  _userDetailsUrl = \"http://localhost:4000/user/userdetails\";\n  _profilePicUrl = \"http://localhost:4000/images/profilepic\";\n  _getFriendList = 'http://localhost:4000/user/friendslist';\n  _getprofileUrl = 'http://localhost:4000/user/profile/';\n  _updateImageUrl = 'http://localhost:4000/user/updateimage';\n  _updateSummaryUrl = 'http://localhost:4000/user/addsummary';\n  _updateFacebookUrl = 'http://localhost:4000/user/addfacebook';\n  _updateTwitterUrl = 'http://localhost:4000/user/addtwitter';\n\n\n  constructor(\n    private http:HttpClient\n    ) { }\n\n  getUserDetails(){\n    return this.http.get<any>(this._userDetailsUrl)\n  }\n\n  getUserImg(user) {\n    return this.http.get(this._profilePicUrl, { responseType: 'blob' })\n  }\n\n  getFriends(username) {\n    return this.http.post<any>(this._getFriendList,{ 'username': username })\n  }\n\n  getProfile(username) {\n    return this.http.get<any>(`${this._getprofileUrl}${username}`)\n  }\n\n  updateImage(img) {\n    var fd = new FormData();\n    fd.append(\"file\",img);\n    return this.http.post<any>(this._updateImageUrl, fd);\n  }\n\n  sendSummary(summary) {\n    return this.http.post<any>(this._updateSummaryUrl, {\"text\":summary})\n  }\n\n  updateFacebook(link) {\n    return this.http.post<any>(this._updateFacebookUrl,{\"link\":link})\n  }\n\n  updateTwitter(link) {\n    return this.http.post<any>(this._updateTwitterUrl,{\"link\":link})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestsService {\n\n  _getFriendRequests = 'http://localhost:4000/user/friendrequests';\n  _addFriendUrl = 'http://localhost:4000/user/addfriend';\n  _rejectFriendUrl = 'http://localhost:4000/user/rejectrequest';\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  getFriendRequests() {\n    return this.http.get<any>(this._getFriendRequests)\n  }\n\n  addFriend(username) {\n    return this.http.post<any>(this._addFriendUrl, {\"username\":username})\n  }\n\n  rejectFriend(username) {\n    return this.http.post<any>(this._rejectFriendUrl, {\"username\":username})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  _getprofileUrl = 'http://localhost:4000/user/profile/';\n  _getFriendList = 'http://localhost:4000/user/friendslist';\n  _sendFriendRequestUrl = \"http://localhost:4000/user/sendrequest\";\n  username:string;\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  getProfile(username) {\n    return this.http.get<any>(`${this._getprofileUrl}${username}`)\n  }\n\n  getFriends(username) {\n    return this.http.post<any>(this._getFriendList,{ 'username': username })\n  }\n\n  sendFriendRequest(username) {\n    return this.http.post<any>(this._sendFriendRequestUrl, {'username': username})\n  }\n}\n","import { Injectable, Injector} from '@angular/core';\nimport {HttpInterceptor} from '@angular/common/http';\nimport {AuthenticateService} from './authenticate.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private injector:Injector\n  ) { }\n\n  intercept(req, next) {\n    let authenticateService = this.injector.get(AuthenticateService)\n    if(authenticateService.loggedIn()) {\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authenticateService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n    }\n    else {\n      return next.handle(req)\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-threestars',\n  templateUrl: './threestars.component.html',\n  styleUrls: ['./threestars.component.css']\n})\nexport class ThreestarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star\"></span>\n<span class=\"fa fa-star\"></span>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-twostars',\n  templateUrl: './twostars.component.html',\n  styleUrls: ['./twostars.component.css']\n})\nexport class TwostarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<div>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star \"></span>\n<span class=\"fa fa-star\"></span>\n<span class=\"fa fa-star\"></span>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Chat } from './models/chatcard';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersimilarityService {\n\n\n  similarityUrl: string = 'http://localhost:4000/user/usersimilarity';\n  constructor(private http: HttpClient) { }\n\n  getUserSimilarity(username) {\n    return this.http.post<any>(this.similarityUrl,{ 'username': username })\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000',\n  isLoggedIn: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}