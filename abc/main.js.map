{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_components/index.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_services/alert.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/index.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getAlert()\n            .subscribe(message => {\n                switch (message && message.type) {\n                    case 'success':\n                        message.cssClass = 'alert alert-success';\n                        break;\n                    case 'error':\n                        message.cssClass = 'alert alert-danger';\n                        break;\n                }\n\n                this.message = message;\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }\n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","export * from './fake-backend';\nexport * from './auth.guard';\nexport * from './jwt.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './alert.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from '@environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<any[]>(`${environment.apiUrl}/user`);\n    }\n\n    register(user) {\n        return this.http.post(`${environment.apiUrl}/user/register`, user);\n    }\n\n    delete(id) {\n        return this.http.delete(`${environment.apiUrl}/user/${id}`);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html', styleUrls: ['./app.component.css']})\nexport class AppComponent {\n    currentUser: any;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}\n","<!-- nav -->\n<div class=\"header bg-light\">\n  <a routerLink=\"/\" class=\"logo\">Gaming Website</a>\n<nav class=\"navbar navbar-expand navbar-dark header-right\" *ngIf=\"currentUser\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/profile\">Profile</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<!-- main content container -->\n<div class=\"jumbotron\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-8 offset-sm-2\">\n                <alert></alert>\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\n//import { fakeBackendProvider } from './_helpers';\n\nimport { appRoutingModule } from './app.routing';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { AlertComponent } from './_components';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        appRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        LoginComponent,\n        RegisterComponent,\n        AlertComponent,\n        ProfileComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        //fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './_helpers';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'profile', component: ProfileComponent },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService } from '../_services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent implements OnInit {\n    currentUser: any;\n    users = [];\n\n    constructor(\n        private authenticationService: AuthenticationService,\n        private userService: UserService\n    ) {\n        this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    ngOnInit() {\n        this.loadAllUsers();\n    }\n\n    deleteUser(id: number) {\n        this.userService.delete(id)\n            .pipe(first())\n            .subscribe(() => this.loadAllUsers());\n    }\n\n    private loadAllUsers() {\n        this.userService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    }\n}\n","<h1>Hi {{currentUser.firstName}}!</h1>\n<p>You're logged in with Angular 7!!</p>\n<h3>All registered users:</h3>\n<ul>\n    <li *ngFor=\"let user of users\">\n        {{user.username}} ({{user.firstName}} {{user.lastName}})\n        - <a (click)=\"deleteUser(user.id)\" class=\"text-danger\">Delete</a>\n    </li>\n</ul>\n","export * from './home.component';\n","export * from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService, AlertService } from '../_services'\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Login\n        </button>\n        <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n  <img id=\"img\">\n  <div id=\"name\">Test Test</div>\n  <div id=\"acheivements\"></div>\n  <div id=\"friends\"></div>\n  <div id=\"buttons\">\n    <button>Add Friend</button>\n    <button>Message</button>\n  </div>\n</div>\n","export * from './register.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService, AlertService } from '../_services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  payload = {\n    'user': {\n      'username:': '',\n      'password': '',\n      'firstname': '',\n      'lastname': ''\n    },\n    'file': '',\n    };\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.alertService.success('Registration successful', true);\n          this.router.navigate(['/login'], { queryParams: { registered: true } });\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n\n  postMethod(files) {\n    this.payload.file = files[0];\n    console.log(files[0])\n  }\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" enctype=\"multipart/form-data\">\n    <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"/>\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"image\">Image</label>\n        <input id=\"image\" type=\"file\" name=\"image\" accept=\"image/*\" (change)=\"postMethod($event.target.files)\">\n    </div>\n\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Register\n        </button>\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}